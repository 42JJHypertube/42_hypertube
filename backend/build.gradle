plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.1.7'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.sonarqube" version "5.1.0.4882"
}

springBoot {
    version = '3.1.7'
}

sonarqube {
    properties {
        property "sonar.projectKey", "hypertube"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.login", "sqp_015ba94f1a8b9474cbc3b3ca4a82bc9e95425d71"
    }
}

group = 'com.42seoulJJ'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven {
        url 'http://4thline.org/m2'
		allowInsecureProtocol = true
    }
	flatDir {
        dirs 'libs' // 라이브러리가 있는 폴더 지정
    }
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'

	// Websocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

	// security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// mail
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// Bt(bittorrent)
	// implementation 'com.github.atomashpolskiy:bt-core:1.10'
	// implementation 'com.github.atomashpolskiy:bt-dht:1.10'
	// implementation 'com.github.atomashpolskiy:bt-upnp:1.10'
	// implementation 'com.github.atomashpolskiy:bt-http-tracker-client:1.10'

	// jlibtorrent
	implementation files('libs/jlibtorrent/jlibtorrent-1.2.19.0.jar');

	// okhttp
	implementation 'com.squareup.okhttp3:okhttp:4.9.2'

	//gson
	implementation 'com.google.code.gson:gson:2.8.8'
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
            exclude 'com/seoulJJ/hypertube/domain/movie/torrent/bt/**'
        }
    }
}
